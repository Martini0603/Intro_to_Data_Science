## Python Syntax
----------------
# to print a number:
x = 5
print(x) 
# '#' symbol creats a comment

help(print)
# You can get information about functions using help

x = 1  # this changes the value from before
my_variable = 'abc'

#ex
a_variable_with_a_long_name = 1
MyMixedCaseVariable = 2
c = 3

print(a_variable_with_a_long_name)
print(MyMixedCaseVariable)
print(c)

# variable is case sensitive
print(mymixedcasevariable)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-13-871f55577e62> in <module>()
----> 1 print(mymixedcasevariable)

NameError: name 'mymixedcasevariable' is not defined

## Manipulating variables
-------------------------
x = 1 * 2  # x will be 2
x = x + 3  # x will be 2 + 3 = 5
print(x)   # print the value to see # =5

x = 1
y = 2
z = 3
print(x * y + z) # =5

print(a_variable_with_a_long_name) # =1
print(a_variable_with_a_long_name * 2) # =2
print(a_variable_with_a_long_name + 5) # =6
# If a variable is defined, its value persists between code blocks

x = 1
print(x) # =1
x += 1
print(x) # =2
x += x  # we can also use variable values
print(x) # =4
x *= 2  # we can use +, -, *, and / this way
print(x) # =8
# Use a shorthand += or -= to increment or decrement

## Functions
------------
print(x)            # this will write "1" (from x = 1 above)
print(my_variable)  # this will write "abc" (from my_variable = 'abc' above)
print("some text")  # we can also call print on an input that's not a variable
print(x, 'text')    # print can take multiple arguments separated by commas

type(x)  # x should be of type "integer," or "int" for short

x = 1.0
type(x) # If we use a decimal point, it will become a floating point number (float)

## A note about the interpreter
-------------------------------
y = 1.0  # set y to a floating point number
type(y)  # write out the type of y
y = 'a'  # reset y to a string
type(y)  # write out the type of y

y = 1.0         # set y to a floating point number
print(type(y))  # explicitly print out the type of y
y = 'a'         # reset y to a string
print(type(y))  # explicitly print out the type of y

## Converting variable types
----------------------------
y = 1
y += 0.1
print(type(y))

y = 1
print(float(y))  # convert to floating point
y = 1.0
print(int(y))    # convert to integer
print(str(y))    # convert to string

## Creating a list
------------------
my_list = ['c', 'a', 'b']
print(my_list) # ['c', 'a', 'b']

my_list = ['a', 1, 2.0]
print(my_list) # ['a', 1, 2.0]

my_list = [1, 1, 1]
print(my_list) # [1, 1, 1]

my_list = [0, 1, ['a', 'b']]
print(my_list) # [0, 1, ['a', 'b']]

## Accessing elements of a list
-------------------------------
my_list = ['a', 'b', 'c']
my_list[0] # 'a'

print(my_list[0]) # a
print(my_list[1]) # b
print(my_list[2]) # c

my_list[0] = 'd'
print(my_list) # ['d', 'b', 'c']

print(my_list[-1])  # the last entry
print(my_list[-2])  # the second to last entry
print(my_list[-3])  # the third to last entry

## Indexing slices
------------------
0:3 indicates elements 0, 1, 2
my_list = ['a', 'b', 'c', 'd']

print(my_list[:]) # ['a', 'b', 'c', 'd']
print(my_list[1:3]) # ['b', 'c']
print(my_list[1:]) # ['b', 'c', 'd']
print(my_list[:3]) # ['a', 'b', 'c']

print(my_list[::2])    # every 2nd element
print(my_list[1::2])   # every 2nd element after the 1st
print(my_list[0:4:2])  # every 2nd element between element 0 and 4
